{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,wDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCMLK,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAO,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCGnBC,G,MARG,SAAC,GAAgC,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC9B,OACI,qBAAKV,UAAU,SAAf,SACI,uBAAOA,UAAU,0CAA0CW,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,QCK5GI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,QAAzC,SACKH,EAAMI,aC2CJC,E,kDAzCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAsB,IAAD,OACjBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEnB,OAAQ2B,S,oBAS3C,WACC,IAAD,EACmCC,KAAKN,MAA5BtB,EADZ,EACYA,OAAQK,EADpB,EACoBA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEzD,OAAQhC,EAAOkC,OAGH,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,SANlC,oBAAIjC,UAAU,QAAd,yB,GA5BMuC,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f14079b.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='bg-light-pink dib br3 ma2 grow shadow-hover dw2 tc w6'>\r\n            <img alt='Robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n    return(\r\n        <div>\r\n        {\r\n            robots.map((user,i) => {\r\n                return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default CardList;","import './SearchBox.css'\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) =>{\r\n    return (\r\n        <div className='pa2 tc'>\r\n            <input className='pa3 ba b--hot-pink bg-lightest-pink br3' type='search' placeholder='Search Robots' onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll', height: '70vh'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users }));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({ searchfield: event.target.value});\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        const { robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        return !robots.length?\r\n            <h1 className='f1 tc'>Loading</h1> :\r\n            (\r\n                    <div className='tc'>\r\n                        <h1 className='f1'>RoboFriends</h1>\r\n                        <SearchBox searchChange={this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <CardList robots={filteredRobots} />\r\n                        </Scroll>\r\n                    </div>\r\n                    \r\n            );\r\n    }\r\n}\r\n    \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}