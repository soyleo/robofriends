{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,wDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCMLK,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAO,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCGnBC,G,MARG,SAAC,GAAgC,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC9B,OACI,qBAAKV,UAAU,SAAf,SACI,uBAAOA,UAAU,0CAA0CW,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,QCK5GI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,QAAzC,SACKH,EAAMI,aCuBJC,E,kDAxBX,WAAYL,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAO,CACRC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SAEH,8DAIAG,KAAKV,MAAMI,a,GApBHQ,IAAMC,WCmDlBC,E,kDA7CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEjB,YAAasB,EAAMC,OAAOC,SAd1C,EAAKZ,MAAQ,CACTjB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAsB,IAAD,OACjByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAAQkC,S,oBAS3C,WACC,IAAD,EACmCb,KAAKJ,MAA5BjB,EADZ,EACYA,OAAQK,EADpB,EACoBA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQtC,EAAOwC,OAGH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,UACI,cAAC,EAAD,CAAWU,aAAce,KAAKK,mBAElC,cAAC,EAAD,UACA,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WATlC,oBAAIvC,UAAU,QAAd,yB,GA5BM2B,IAAMC,WCKTiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a409b438.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='bg-light-pink dib br3 ma2 grow shadow-hover dw2 tc w6'>\r\n            <img alt='Robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n    return(\r\n        <div>\r\n        {\r\n            robots.map((user,i) => {\r\n                return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default CardList;","import './SearchBox.css'\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) =>{\r\n    return (\r\n        <div className='pa2 tc'>\r\n            <input className='pa3 ba b--hot-pink bg-lightest-pink br3' type='search' placeholder='Search Robots' onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll', height: '70vh'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError)\r\n        {\r\n            return <h1>Ooooopsieeee, that's no good</h1>;\r\n        }\r\n        else\r\n        {\r\n            return this.props.children;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users }));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({ searchfield: event.target.value});\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        const { robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        return !robots.length?\r\n            <h1 className='f1 tc'>Loading</h1> :\r\n            (\r\n                    <div className='tc'>\r\n                        <h1 className='f1'>RoboFriends</h1>\r\n                        <ErrorBoundry>\r\n                            <SearchBox searchChange={this.onSearchChange} />\r\n                        </ErrorBoundry>\r\n                        <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                        </Scroll>\r\n                    </div>\r\n                    \r\n            );\r\n    }\r\n}\r\n    \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}